<h3>Online-Material zu <b>Patterns kompakt</b></h3>
<p />
Hier möchten wir unseren Lesern weitere Diagramme, Beispielszenarien
und <a href="#CODE">Codebeispiele</a> zur Verfügung stellen, für die im Buch kein
Raum ist.
<p />
Das Material ist nach dem Motto <i>einsteigen und losfahren</i> 
aufgebaut. Nur selten gibt es Abhängigkeiten zwischen den Beispielen, so dass
Sie sich auf ein Pattern konzentrieren können.<br />
Ganz bewusst haben wir jeweils ein anderes Szenario
als im Buch gewählt.<br />
Das soll Ihnen die Möglichkeit geben, das Muster
noch einmal aus einem anderen Blickwinkel zu betrachten.
<p />
Jedes Pattern ist lauffähig in Form eines Testcases. Spielen Sie mit den
Log-Leveln, oder führen Sie weitere Debug-Ausgaben ein, wenn Ihnen etwas
unklar sein sollte. Denken Sie auch ruhig mal darüber nach, ob das jeweils demonstrierte
Pattern in dem Szenario der Weißheit letzter Schluss ist, oder
ob ein anderes vielleicht besser passen würde!
<p />
Wir laden Sie zum Ausprobieren, Experimentieren und Kritisieren ein.
Berichten Sie uns von Ihren Erfahrungen und wo Sie Entwurfsmuster
bereits erfolgreich anwenden konnten.
<p />
Viel Erfolg und vor allem Spaß bei Ihrer Arbeit!
<p />
<a href="mailto:Karl.Eilebrecht(a/t)calamanari.de">Karl Eilebrecht</a>, <a href="mailto:gs@gernotstarke.de">Gernot Starke</a><br />
Januar 2019
<p />
&nbsp;
<p />
<a name="CODE" />
<h3>Code-Beispiele</h3>
Neben der Möglichkeit, sich die API der Klassen mit verlinktem Source-Code <a href="./javadoc/index.html" target="blank">online anzuschauen</a>, können Sie das Projekt mit den Codebeispielen hier herunterladen: 
<h4><a href="./download/pk-examples.zip">Download pk-examples.zip</a></h4>
<p />
Es hat sich zum Standard entwickelt, viele Basisfunktionaliäten mit Bibliotheken
abzudecken, die als externe Dependencies deklariert und aus Repositories geladen werden.<br />
In der Vergangenheit haben wir noch versucht, ohne solche zusätzlichen Abhängigkeiten auszukommen, weil
das für Neulinge die Hürden erhöht, Beispiele einfach mal auszuprobieren.<br /><br />
Mittlerweile wird ein solcher Insel-Entwicklungsansatz aber immer schwieriger (das JDK wird verschlankt) und ist zunehmend fragwürdig, weil er einfach <i>Best Practices</i> widerspricht.<br />
Daher sind die Code-Beispiele jetzt als Maven-Projekt umgesetzt und setzen neben dem JDK 11 eine funktionierende Maven-Installation voraus.
<p />
Neben dem Archiv mit den Sourcen benötigen Sie:<br />
<ul>
<li>Java Platform (JDK) 11 (z.B. OpenJDK)</li>
<li>Apache Maven (3.2.3 oder neuer)</li>
</ul>
Zu empfehlen ist eine IDE wie <a href="http://www.eclipse.org/" target="_blank">Eclipse</a>. <br />
Wir haben außerdem <a href="https://www.sonarlint.org/" target="_blank">SonarLint</a> im Einsatz.
<p />
&nbsp;
<p />
<h3>Das Letzte</h3>
Kennen Sie die <i>Pattern-Wette des Teufels</i>?<br />
Die Legende besagt, dass der Teufel (bildet sich 666 Stunden pro Tag weiter) irgendwann feststellte, dass es bei Entwurfsmustern
viele Details zu beachten gibt. <i>&quot;Details klingt gut&quot;</i>, grinste er, <i>&quot;da stecke ich drin!&quot;</i><br />
Seitdem erscheint er vielen Entwicklern im Traum <i>&quot;Wetten, dass Du es nicht schaffst, das folgende Pattern in Deinem
aktuellen Projekt einzusetzen? Falls doch, sollst Du berühmt werden, anderfalls wird das Projekt mein sein!&quot;</i>
<p />
Diese Wette gewinnt fast immer der Teufel <i>- so oder so ...</i>


